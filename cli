#! /bin/bash
# cc-phalcon CLI tools
# author: Nicolas Pulido <nicolas.pulido@crazycake.cl>

# stop execution for exceptions
set -e

#Current path
PROJECT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Package properties
APP_NAME="cc-phalcon"
APP_NAMESPACE="$(echo "$APP_NAME" | tr '[:upper:]' '[:lower:]')"

# Local documentation path.
DOC_PHP_INPUT_PATH="./"
DOC_PHP_OUTPUT_PATH=$PROJECT_PATH"/.docs/"

#script help function
scriptHelp() {
	echo -e "\033[93m"$APP_NAME" core Script\nValid actions:\033[0m"
	echo -e "\033[96m chmod: Set correct permissions on directories and files for serve.\033[0m"
	echo -e "\033[96m build: Builds phar file with default box.json file.\033[0m"
	echo -e "\033[96m tree: Returns the file tree of phar file.\033[0m"
	echo -e "\033[96m docs: Generates PHP Docs (PHP doc library is required [phpdoc]).\033[0m"
	echo -e "\033[96m release: Creates a new tag release. Required version and message.\033[0m"
	echo -e "\033[96m delete-tags: Removes local and remote repository tags.\033[0m"
	exit
}

#commands
case "$1" in

	chmod)
	# print project dir
	echo -e "\033[95mProject path: "$PROJECT_PATH" \033[0m"

	# set default perms for folders & files (use 'xargs -I {} -0 sudo chmod xxxx {}' if args is to long)
	echo -e "\033[95mApplying user-perms for all folders and files (sudo is required)... \033[0m"
	# current path
	find $PROJECT_PATH -type d -print0 | sudo xargs -0 chmod 0755
	find $PROJECT_PATH -type f -print0 | sudo xargs -0 chmod 0644

	#task done!
	echo -e "\033[92mDone! \033[0m"
	;;

	build)

	cd $PROJECT_PATH
	php box.phar build -v
	# task done!
	echo -e "\033[92mDone! \033[0m"
	;;

	tree)

	cd $PROJECT_PATH
	php box.phar info -l $APP_NAMESPACE".phar"
	# task done!
	echo -e "\033[92mDone! \033[0m"
	;;

	docs)

	#PHP
	echo -e "\033[35mGenerating PHP Docs...\033[0m"
	phpdoc -d $DOC_PHP_INPUT_PATH -t $DOC_PHP_OUTPUT_PATH --template="responsive-twig"
	;;

	release)

	if [ "$2" = "" ] || [ "$3" = "" ] ; then
		echo -e "\033[95mRelease and message params are required.\033[0m"
		exit
	fi

	echo -e "\033[95mReleasing version $2 \033[0m"

	git tag -a "$2" -m "$3"
	git push origin master --tags
	;;

	delete-tags)

	#loop through tags
	for t in `git tag`
	do
		git push origin :$t
		git tag -d $t
	done
	;;

	#default
	*)
	scriptHelp
	;;
esac
